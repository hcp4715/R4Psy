"0","# empty the global env"
"0","rm(list = ls())"
"0",""
"0","df.match <- read.csv('./data/match/match_raw.csv',"
"0","                       header = T, sep="","", stringsAsFactors = FALSE) %>%"
"0","  tidyr::extract(Shape, into = c(""Valence"", ""Identity""),"
"0","                        regex = ""(moral|immoral)(Self|Other)"", remove = FALSE) %>%"
"0","  dplyr::mutate(Valence = ifelse(Valence == ""moral"", ""Good"", ""Bad""),"
"0","                Valence = factor(Valence, levels = c(""Good"", ""Bad"")),"
"0","                Identity = factor(Identity, levels = c(""Self"", ""Other"")))"
"0",""
"0","### Rule 1: wrong trials numbers because of procedure errors"
"0","excldSub1 <- df.match %>%"
"0","   dplyr::mutate(ACC = ifelse(ACC == 1, 1, 0))  %>%  # no response as wrong"
"0","   dplyr::group_by(Sub, Match, Identity, Valence) %>%"
"0","   dplyr::summarise(N = length(ACC)) %>%  # count the trial # for each condition of each subject"
"0","   dplyr::ungroup() %>%"
"0","   dplyr::filter(N != 75) %>%             # filter the rows that trial Number is not 75"
"0","   dplyr::distinct(Sub) %>%           # find the unique subject ID"
"0","   dplyr::pull(Sub)                   # pull the subj ID as vector"
"0",""
"0",""
"0","### Rule 2:  overall accuracy < 0.5"
"0","excldSub2 <- df.match %>%"
"0","   dplyr::mutate(ACC = ifelse(ACC == 1, 1, 0))  %>%  # no response as wrong"
"0","   dplyr::group_by(Sub) %>%"
"0","   dplyr::summarise(N = length(ACC),"
"0","                    countN = sum(ACC),"
"0","                    ACC = sum(ACC)/length(ACC)) %>%  # count the trial # for each condition of each subject"
"0","   dplyr::ungroup() %>%"
"0","   dplyr::filter(ACC < .5) %>%             # filter the subjects with over all ACC < 0.5"
"0","   dplyr::distinct(Sub) %>%             # find the unique subject ID"
"0","   dplyr::pull(Sub)                     # pull the subj ID as vector"
"0",""
"0","### Rule 3:  one condition with zero ACC"
"0","excldSub3 <- df.match %>%"
"0","   dplyr::mutate(ACC = ifelse(ACC == 1, 1, 0))  %>%  # no response as wrong"
"0","   dplyr::group_by(Sub, Match, Identity, Valence) %>%"
"0","   dplyr::summarise(N = length(ACC),"
"0","                    countN = sum(ACC),"
"0","                    ACC = sum(ACC)/length(ACC)) %>%  # count the trial # for each condition of each subject"
"0","   dplyr::ungroup() %>%"
"0","   dplyr::filter(ACC == 0) %>%             # filter the subjects with over all ACC < 0.5"
"0","   dplyr::distinct(Sub) %>%             # find the unique subject ID"
"0","   dplyr::pull(Sub)                     # pull the subj ID as vector"
"0",""
"0","# all participants excluded"
"0","excldSub   <- c(excldSub1, excldSub2, excldSub3) # 7302, 7303"
"0",""
"0","# select valid data for further analysis"
"0","df.mt.v <- df.match %>%"
"0","  dplyr::filter(ACC == 1 | ACC == 0) %>%"
"0","  dplyr::filter(!Sub %in% excldSub)            # exclude the invalid subjects"
"0",""
"0","# check the number of participants are correct"
"0","# length(unique(df.mt.v$Sub)) + length(excldSub) == length(unique(df.match$Sub))"
"0",""
"0","# ratio of invalid trials"
"0","ratio.excld.trials <- nrow(df.mt.v[df.mt.v$RT*1000 <= 200 & df.mt.v$ACC == 1,])/nrow(df.mt.v)  "
"0",""
"0",""
"0","## Basic information of the data ####"
"0","df.m.basic <- df.match %>%"
"0","   dplyr::select(Sub, Age, Sex) %>%"
"0","   dplyr::distinct(Sub, Age, Sex) %>%"
"0","   dplyr::summarise(subj_N = length(Sub),"
"0","                    female_N = sum(Sex == 'female'),"
"0","                    male_N = sum(Sex == 'male'),"
"0","                    Age_mean = round(mean(Age),2),"
"0","                    Age_sd   = round(sd(Age),2))"
"0",""
"0","df.mt.v.basic <- df.mt.v %>%"
"0","   dplyr::select(Sub, Age, Sex) %>%"
"0","   dplyr::distinct(Sub, Age, Sex) %>%"
"0","   dplyr::summarise(subj_N = length(Sub),"
"0","                    female_N = sum(Sex == 'female'),"
"0","                    male_N = sum(Sex == 'male'),"
"0","                    Age_mean = round(mean(Age),2),"
"0","                    Age_sd   = round(sd(Age),2))"
